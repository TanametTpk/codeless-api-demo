{"version":3,"sources":["components/Attributes.js","components/DatabaseField.js","components/Field.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","dataTypes","limitType","StringField","props","react_default","a","createElement","input","size","value","attribute","_default","placeholder","onChange","_ref","target","onChangeOption","es_radio","checked","lowercase","onClick","trim","encrypt","id","NumberField","_useState","useState","_useState2","Object","slicedToArray","isMinMax","setMinMax","style","color","es_switch","input_number","disabled","min","max","defaultValue","IDField","width","es_select","attributes","map","att","index","name","key","ArrayField","_useState3","_useState4","type","setType","_useState5","ref","_useState6","state","setState","customOption","objectSpread","dt","Attributes_StringField","Attributes_NumberField","Attributes_IDField","SubObject","_useState7","_useState8","setAtt","padding","margin","backgroundColor","borderRadius","boxShadow","_ref2","Attributes_this","es_button","splice","onDelete","concat","toConsumableArray","icon","Attributes","_this2","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSelectType","payload","updateFunc","deleteFunc","_this3","className","_ref3","require","unique","disable_get","disable_update","auth","Attributes_ArrayField","Attributes_SubObject","Component","DatabaseField","_this","addAttribute","sub_objects","array_option","updateAttribute","obj","deleteAttribute","onNameChange","Attributes_Attributes","uuidv1","socket","socketIOClient","room","Field","build","emit","userID","project_id","app_name","success","url","window","open","onPortChange","port","addDb","databases","updateDb","deleteDb","finish","textAlign","db","DatabaseField_DatabaseField","database","position","bottom","right","shape","App","Field_Field","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8de032ed.chunk.js","sourcesContent":["import React, { Component , useState } from 'react'\nimport { Input , InputNumber , Button , Icon , Select , Radio, Slider, Switch } from 'antd';\n\nconst { Option } = Select;\n\nlet dataTypes = [\n    \"string\",\n    \"id\",\n    \"date\",\n    \"number\",\n    \"buffer\",\n    \"mixed\",\n    \"boolean\",\n    \"decimal128\",\n    \"object\",\n    \"array\"\n]\n\nlet limitType = [\n    \"string\",\n    \"id\",\n    \"date\",\n    \"number\",\n    \"buffer\",\n    \"mixed\",\n    \"boolean\",\n    \"decimal128\",\n]\n\n// {\n//     sub_objects:[],\n// }\n\nconst StringField = (props) => {\n\n    return(\n        <div>\n            <Input size=\"large\" value={props.attribute._default} placeholder=\"Default\" onChange={({target:{value}}) => { props.onChangeOption(\"_default\" , value) } } />\n            \n            <Radio checked={props.attribute.lowercase} onClick={() => { props.onChangeOption(\"lowercase\" , !props.attribute.lowercase) }}>\n                lowercase\n            </Radio>\n\n            <Radio checked={props.attribute.trim} onClick={() => { props.onChangeOption(\"trim\" , !props.attribute.trim) }}>\n                trim\n            </Radio>\n\n            <Radio checked={props.attribute.encrypt} onClick={() => { props.onChangeOption(\"encrypt\" , !props.attribute.encrypt) }}>\n                encrypt\n            </Radio>\n\n            <Radio checked={props.attribute.id} onClick={() => { props.onChangeOption(\"id\" , !props.attribute.id) }}>\n                ID\n            </Radio>\n\n        </div>\n    )\n\n}\n\nconst NumberField = (props) => {\n\n    let [ isMinMax , setMinMax ] = useState( false )\n\n    return(\n        <div style={{color:\"black\"}}>\n            allow min & max : <Switch size=\"small\" checked={isMinMax} onChange={() => { setMinMax(!isMinMax) }} />\n            <div>\n                Min : <InputNumber disabled={!isMinMax} min={-2147483648} max={props.attribute.max || 2147483647} defaultValue={0} value={props.attribute.min} onChange={(value) => props.onChangeOption(\"min\" , value)} />\n                Max : <InputNumber disabled={!isMinMax} min={props.attribute.min || -2147483648} max={2147483647} defaultValue={0} value={props.attribute.max} onChange={(value) => props.onChangeOption(\"max\" , value)} />\n            </div>\n        </div>\n    )\n}\n\nconst IDField = (props) => {\n    return(\n        <div style={{ width: '100%'  }} >\n            <Select style={{ width: '100%'  }}  onChange={(value) => props.onChangeOption(\"ref\" , value)} >\n                { props.attributes.map((att , index) => props.attribute.name === att.name ? null : <Option key={index} value={att.name}>{att.name}</Option> ) }\n            </Select>\n        </div>\n    )\n}\n\nconst ArrayField = (props) => {\n\n    let [type , setType] = useState(dataTypes[0])\n    let [ state , setState ] = useState(\n        {\n            type:\"string\",\n            _default:\"\",\n            lowercase:false,\n            trim:false,\n            max:null,\n            min:null,\n            ref:null,\n        }\n    )\n\n    const onChange = (value) => {\n        setType(value)\n        props.onChangeOption(\"array_option\" , { ...state , type:value } )\n    }\n\n    const customOption = ( type , value ) => {\n\n        state[type] = value\n        setState(state)\n\n        props.onChangeOption(\"array_option\" , { ...state } )\n\n    }\n\n    return(\n        <div style={{ width: '100%'  }} >\n            <Select value={type} style={{ width: '100%'}} onChange={onChange} >\n                { limitType.map(((dt , index) => <Option key={index} value={dt}>{dt}</Option>)) }\n            </Select>\n\n            {\n                type === \"string\" ? <StringField attribute={props.attribute} onChangeOption={customOption} /> : null\n            }\n\n            {\n                type === \"number\" ? <NumberField attribute={props.attribute} onChangeOption={customOption} /> : null\n            }\n\n            {\n                type === \"id\" ? <IDField attributes={props.attributes} attribute={props.attribute} onChangeOption={customOption} /> : null\n            }\n\n        </div>\n    )\n}\n\nconst SubObject = (props) => {\n\n    let [ att , setAtt ] = useState([])\n\n    const customOption = ( index ,type , value ) => {\n\n        att[index][type] = value\n        setAtt(att)\n\n        props.onChangeOption(\"sub_objects\" , att)\n\n    }\n\n    const onDelete = (index) => {\n\n        att.splice(index,1)\n\n        setAtt(att)\n\n        props.onChangeOption(\"sub_objects\" , att)\n\n    }\n\n    const addAttribute = () => {\n\n        setAtt(\n            [...att , {\n                name:\"\",\n                type:\"string\",\n                _default:\"\",\n                lowercase:false,\n                trim:false,\n                max:null,\n                min:null,\n                ref:null,\n            }]\n        ,()=>{\n            props.onChangeOption(\"sub_objects\" , att)\n        })\n\n    }\n\n    return(\n        <div style={{ width:\"100%\", padding:\"20px\" , margin:\"12px 0px\" , backgroundColor:\"white\" , borderRadius:\"6px\" , boxShadow:\"0px 0px 39px -16px rgba(0,0,0,0.75)\" }} >\n\n            {\n                att.map((a , index) => {\n                    return(\n                        <div>\n                            <Input size=\"large\" placeholder=\"Sub-Attribute name\" onChange={({target:{value}}) => this.onChangeOption(\"name\" , value) } />\n\n                            <Select value={a.type} style={{ width: '100%'}} onChange={(value) => customOption(index , \"type\" , value)} >\n                                { limitType.map(((dt , index) => <Option key={index} value={dt}>{dt}</Option>)) }\n                            </Select>\n\n                            {\n                                a.type === \"string\" ? <StringField attribute={a} onChangeOption={customOption} /> : null\n                            }\n\n                            {\n                                a.type === \"number\" ? <NumberField attribute={a} onChangeOption={customOption} /> : null\n                            }\n\n                            {\n                                a.type === \"id\" ? <IDField attributes={props.attributes} attribute={props.attribute} onChangeOption={customOption} /> : null\n                            }\n\n                            <Button type=\"danger\" style={{ width: '100%'  }} onClick={() => onDelete(index)} >Delete Sub-att</Button>\n\n                        </div>\n                    )\n                })\n            }\n\n            <Button type=\"dashed\" onClick={addAttribute} style={{ width: '100%' }}>\n                <Icon type=\"plus\" /> Add sub-attributes\n            </Button>\n\n        </div>\n    )\n}\n\nexport default class Attributes extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            type:dataTypes[0]\n        }\n    }\n\n    onSelectType = (value) => {\n        this.onChangeOption(\"type\" , value)\n    }\n\n    onChangeOption = ( name , value ) => {\n\n        let payload = {\n            ...this.props.attribute,\n        }\n        \n        payload[name] = value\n\n        this.props.updateFunc(this.props.id , payload )\n    }\n\n    onDelete = () => {\n        this.props.deleteFunc(this.props.id)\n    }\n\n    render() {\n        \n        return (\n            <div className=\"Attributes-container\" style={{ padding:\"20px\" , margin:\"12px 0px\" , backgroundColor:\"white\" , borderRadius:\"6px\" , boxShadow:\"0px 0px 39px -16px rgba(0,0,0,0.75)\" }}>\n\n                <Input size=\"large\" placeholder=\"Attribute name\" onChange={({target:{value}}) => this.onChangeOption(\"name\" , value) } />\n\n                <Select value={this.props.attribute.type || this.state.type} style={{ width: '100%'}} onChange={this.onSelectType} >\n                    { dataTypes.map(((dt , index) => <Option key={index} value={dt}>{dt}</Option>)) }\n                </Select>\n                \n                <Radio checked={this.props.attribute.require} onClick={()=>{this.onChangeOption(\"require\" , !this.props.attribute.require)}} >\n                    require\n                </Radio>\n\n                <Radio checked={this.props.attribute.unique} onClick={() => { this.onChangeOption(\"unique\" , !this.props.attribute.unique) }}>\n                    unique\n                </Radio>\n\n                <Radio checked={this.props.attribute.disable_get} onClick={() => { this.onChangeOption(\"disable_get\" , !this.props.attribute.disable_get) }}>\n                    disable_get\n                </Radio>\n\n                <Radio checked={this.props.attribute.disable_update} onClick={() => { this.onChangeOption(\"disable_update\" , !this.props.attribute.disable_update) }}>\n                    disable_update\n                </Radio>\n\n                <Radio checked={this.props.attribute.auth} onClick={() => { this.onChangeOption(\"auth\" , !this.props.attribute.auth) }}>\n                    auth\n                </Radio>\n\n                {/* custom display */}\n\n                {\n                    this.props.attribute.type === \"string\" ? <StringField attribute={this.props.attribute} onChangeOption={this.onChangeOption} /> : null\n                }\n\n                {\n                    this.props.attribute.type === \"number\" ? <NumberField attribute={this.props.attribute} onChangeOption={this.onChangeOption} /> : null\n                }\n\n                {\n                    this.props.attribute.type === \"id\" ? <IDField attributes={this.props.attributes} attribute={this.props.attribute} onChangeOption={this.onChangeOption} /> : null\n                }\n\n                {\n                    this.props.attribute.type === \"array\" ? <ArrayField attributes={this.props.attributes} attribute={this.props.attribute} onChangeOption={this.onChangeOption} /> : null\n                }\n\n                {\n                    this.props.attribute.type === \"object\" ? <SubObject attributes={this.props.attributes} attribute={this.props.attribute} onChangeOption={this.onChangeOption} /> : null\n                }\n\n                <Button type=\"danger\" style={{ width: '100%'  }} onClick={this.onDelete} >Delete attribute</Button>\n\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Input , InputNumber , Button , Icon } from 'antd';\nimport Attributes from './Attributes'\n\nexport default class DatabaseField extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            name:\"\",\n            attributes:[]\n        }\n    }\n\n    addAttribute = () => {\n        this.setState({\n            attributes:[\n                ...this.state.attributes,\n                {\n                    name:\"\",\n                    type:\"string\",\n                    _default:\"\",\n                    require:false,\n                    lowercase:false,\n                    trim:false,\n                    max:null,\n                    min:null,\n                    unique:false,\n                    encrypt:false,\n                    disable_get:false,\n                    disable_update:false,\n                    auth:false,\n                    id:false,\n                    ref:null,\n                    sub_objects:[],\n                    array_option:null\n                }\n            ]\n        })\n    }\n\n    updateAttribute = (index , obj) => {\n\n        let {attributes} = this.state\n\n        attributes[index] = obj\n\n        this.setState({\n            attributes\n        } , ()=>{\n            this.props.updateFunc(this.props.id , this.state)\n        })\n    }\n\n    deleteAttribute = (index) => {\n\n        let {attributes} = this.state\n\n        attributes.splice(index,1)\n\n        this.setState({\n            attributes\n        } , ()=>{\n            this.props.updateFunc(this.props.id , this.state)\n        })\n\n    }\n\n    onNameChange = (value) => {\n        this.setState({name:value} , ()=>{\n            this.props.updateFunc(this.props.id , this.state)\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Database-container\" style={{ padding:\"20px\" , margin:\"12px 0px\" , backgroundColor:\"white\" , borderRadius:\"6px\" }} >\n\n                <Input size=\"large\" placeholder=\"Database name\" value={this.state.name} onChange={ ({target:{value}}) => this.onNameChange( value ) } />\n\n                { this.state.attributes.map((att , index) => <Attributes key={index} id={index} attribute={att} attributes={this.state.attributes} updateFunc={this.updateAttribute} deleteFunc={this.deleteAttribute} />) }\n\n                <Button type=\"dashed\" onClick={this.addAttribute} style={{ width: '100%' }}>\n                    <Icon type=\"plus\" /> Add attributes\n                </Button>\n\n                <Button type=\"danger\" style={{ width: '100%' }} onClick={ () => this.props.deleteFunc(this.props.id) } >Delete database</Button>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Input , InputNumber , Button , Icon } from 'antd';\nimport DatabaseField from './DatabaseField'\nimport socketIOClient from \"socket.io-client\";\n\nconst uuidv1 = require('uuid/v1');\n\nlet socket = socketIOClient(\"http://localhost\");\nconst room = uuidv1()\n\nexport default class Field extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            app_name:\"\",\n            port:80,\n            databases:[]\n        }\n    }\n\n    build = () => {\n        socket.emit('execute-command', { userID:room , project_id:this.state.app_name , payload:this.state } , (payload)=>{\n            \n            if(payload.success){\n                let url = payload.url\n                window.open(url);\n            }\n            \n        })\n    }\n\n    onPortChange = (value) => {\n        this.setState({port:value})\n    }\n\n    addDb = () => {\n\n        this.setState({\n            databases:[\n                ...this.state.databases,\n                {\n                    \"name\":\"\",\n                    \"attributes\":[]\n                }\n            ]\n        })\n\n    }\n\n    updateDb = (index , value) => {\n\n        let {databases} = this.state\n\n        databases[index] = value\n\n        this.setState({\n            databases\n        })\n\n    }\n\n    deleteDb = (index) => {\n\n        let {databases} = this.state\n\n        databases.splice(index,1)\n\n        this.setState({\n            databases\n        })\n\n    }\n\n    finish = () => {\n        this.build()        \n    }\n\n    render() {\n        return (\n            <div style={{textAlign:\"left\"}} >\n\n                {/* app input */}\n                <Input size=\"large\" placeholder=\"App name\" onChange={({target:{value}})=>this.setState({ app_name:value })} />\n                port\n                <InputNumber style={{width:\"100%\"}} min={0} max={65535} defaultValue={this.state.port} value={this.state.port} onChange={this.onPortChange} />\n\n                Databases\n                { this.state.databases.map((db , index) => <DatabaseField key={index} id={index} database={db} databases={this.state.databases} updateFunc={this.updateDb} deleteFunc={this.deleteDb} />) }\n\n                <Button type=\"dashed\" onClick={this.addDb} style={{ width: '100%' }}>\n                    <Icon type=\"plus\" /> Add Database\n                </Button>\n\n                <div style={{position:'fixed' , bottom:'20px' , right:'20px'}}>\n                    <Button type=\"primary\" shape=\"round\" icon=\"check\" size='large' onClick={this.finish}>\n                        Finish\n                    </Button>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Field from './components/Field'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Field />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}